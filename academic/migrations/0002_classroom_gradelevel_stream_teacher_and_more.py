# Generated by Django 4.1 on 2023-09-23 07:08

import academic.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('sis', '0013_remove_emergencycontactnumber_contact_and_more'),
        ('administration', '0014_academicyear_day_school_delete_classjournal'),
        ('academic', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('capacity', models.IntegerField(blank=True, default=25, help_text='Enter total number of sits default is set to 25')),
                ('occupied_sits', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Grade Level')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Stream',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, validators=[academic.validators.stream_validator])),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=250, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=300, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=300, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('teacher_id', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('empId', models.CharField(blank=True, max_length=8, null=True, unique=True)),
                ('middle_name', models.CharField(blank=True, max_length=100)),
                ('tin_number', models.CharField(blank=True, max_length=9, null=True)),
                ('nssf_number', models.CharField(blank=True, max_length=9, null=True)),
                ('short_name', models.CharField(blank=True, max_length=3, null=True, unique=True)),
                ('isTeacher', models.BooleanField(default=True)),
                ('salary', models.IntegerField(blank=True, null=True)),
                ('national_id', models.CharField(blank=True, max_length=100, null=True)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(blank=True, max_length=150)),
                ('alt_email', models.EmailField(blank=True, help_text='Personal Email apart from the one given by the school', max_length=254, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('designation', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='employee_images')),
                ('inactive', models.BooleanField(default=False)),
                ('subject_specialization', models.ManyToManyField(blank=True, to='academic.subject')),
            ],
            options={
                'ordering': ('first_name', 'last_name'),
            },
        ),
        migrations.CreateModel(
            name='SubjectAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(blank=True, choices=[('ONE', 'One'), ('TWO', 'Two'), ('THREE', 'Three'), ('FOUR', 'Four')], max_length=10, null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.academicyear')),
                ('class_room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', to='academic.classroom')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='allocated_subjects', to='academic.subject')),
                ('teacher_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='StudentClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.academicyear')),
                ('classroom', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_student', to='academic.classroom')),
                ('student_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_class', to='sis.student')),
            ],
        ),
        migrations.AddField(
            model_name='classroom',
            name='class_teacher',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='academic.teacher'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='grade_level',
            field=models.ForeignKey(blank=True, help_text="the grade level of the class ie: 'form one is in Grade one' ", null=True, on_delete=django.db.models.deletion.SET_NULL, to='academic.gradelevel'),
        ),
        migrations.AddField(
            model_name='classroom',
            name='stream',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='class_stream', to='academic.stream'),
        ),
        migrations.AlterUniqueTogether(
            name='classroom',
            unique_together={('name', 'stream')},
        ),
    ]
