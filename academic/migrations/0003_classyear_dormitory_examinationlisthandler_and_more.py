# Generated by Django 4.1 on 2023-09-23 08:38

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('administration', '0015_alter_classteacher_unique_together_and_more'),
        ('users', '0017_delete_teacher'),
        ('academic', '0002_classroom_gradelevel_stream_teacher_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassYear',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(help_text='Example 2020', max_length=100, unique=True)),
                ('full_name', models.CharField(blank=True, help_text='Example Class of 2020', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Dormitory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('capacity', models.PositiveIntegerField(blank=True, null=True)),
                ('occupied_beds', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationListHandler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('ends_date', models.DateField()),
                ('out_of', models.IntegerField()),
                ('comments', models.CharField(blank=True, help_text='Comments Regarding Exam', max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('classrooms', models.ManyToManyField(related_name='class_exams', to='academic.classroom')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='academic.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageToParent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='this message will be shown to Parents when they log in')),
                ('start_date', models.DateField(default=django.utils.timezone.now, help_text='If blank the message will be posted starting today')),
                ('end_date', models.DateField(default=django.utils.timezone.now, help_text='if blank the message will end today')),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=250, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=300, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=300, verbose_name='Last Name')),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=10)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_type', models.CharField(choices=[('Father', 'Father'), ('Mother', 'Mother'), ('Guardian', 'Guardian')], max_length=10)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('phone_number', models.CharField(help_text='personal phone number', max_length=150)),
                ('national_id', models.CharField(blank=True, max_length=100, null=True)),
                ('occupation', models.CharField(blank=True, help_text='current occupation', max_length=255)),
                ('monthly_income', models.FloatField(blank=True, help_text='parents average monthly income')),
                ('single_parent', models.BooleanField(blank=True, default=False, help_text='is he/she a single parent')),
                ('alt_email', models.EmailField(blank=True, help_text='personal Email ', max_length=254, null=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, upload_to='Parent_images')),
                ('inactive', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ReasonLeft',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('unique_id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=150, null=True, verbose_name='First Name')),
                ('middle_name', models.CharField(max_length=150, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=150, null=True, verbose_name='Last Name')),
                ('graduation_date', models.DateField(blank=True, null=True)),
                ('date_dismissed', models.DateField(blank=True, null=True)),
                ('religion', models.CharField(blank=True, max_length=50, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('street', models.CharField(blank=True, max_length=255)),
                ('blood_group', models.CharField(blank=True, max_length=10, null=True)),
                ('date_of_birth', models.DateField(blank=True)),
                ('admission_date', models.DateTimeField(auto_now_add=True)),
                ('admission_number', models.CharField(blank=True, max_length=50, unique=True)),
                ('image', models.ImageField(blank=True, upload_to='StudentsImages')),
                ('cache_gpa', models.DecimalField(blank=True, decimal_places=2, editable=False, max_digits=5, null=True)),
                ('class_of_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academic.classyear')),
                ('grade_level', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academic.gradelevel')),
                ('parent_guardian', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='child', to='academic.parent')),
                ('reason_left', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='academic.reasonleft')),
                ('siblings', models.ManyToManyField(blank=True, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='FamilyAccessUser',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('users.customuser',),
        ),
        migrations.CreateModel(
            name='StudentsPreviousAcademicHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('former_school', models.CharField(help_text='Former school name', max_length=255)),
                ('last_gpa', models.FloatField()),
                ('notes', models.CharField(blank=True, help_text='Indicate students academic performance according to your observation', max_length=255)),
                ('academic_record', models.FileField(blank=True, upload_to='students_former_academic_files')),
                ('students_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentsMedicalHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('history', models.TextField()),
                ('file', models.FileField(blank=True, null=True, upload_to='students_medical_files')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentHealthRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.TextField()),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='student_files')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa', models.FloatField(null=True)),
                ('cat_gpa', models.FloatField(null=True)),
                ('term', models.CharField(blank=True, choices=[('ONE', 'One'), ('TWO', 'Two'), ('THREE', 'Three'), ('FOUR', 'Four')], max_length=10, null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.academicyear')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.CreateModel(
            name='MarksManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.FloatField()),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_entered', to='academic.teacher')),
                ('exam_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_marks', to='academic.examinationlisthandler')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_marks', to='academic.studentclass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_marks', to='academic.subject')),
            ],
        ),
        migrations.CreateModel(
            name='DormitoryAllocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_from', models.DateField(auto_now_add=True)),
                ('date_till', models.DateField(blank=True, null=True)),
                ('dormitory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.dormitory')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
            ],
        ),
        migrations.AddField(
            model_name='dormitory',
            name='captain',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='academic.student'),
        ),
        migrations.AlterField(
            model_name='studentclass',
            name='student_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_class', to='academic.student'),
        ),
        migrations.CreateModel(
            name='GradeScaleRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('letter_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('numeric_scale', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('grade_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.gradescale')),
            ],
            options={
                'unique_together': {('min_grade', 'max_grade', 'grade_scale')},
            },
        ),
    ]
