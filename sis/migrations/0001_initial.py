# Generated by Django 3.1.2 on 2021-04-22 19:24

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(help_text='Example 2014', unique=True)),
                ('full_name', models.CharField(blank=True, help_text='Example Class of 2014', max_length=255)),
            ],
            options={
                'verbose_name': 'Graduating Class',
                'verbose_name_plural': 'Graduating Classes',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(max_length=255, verbose_name='First Name')),
                ('mname', models.CharField(blank=True, max_length=255, null=True, verbose_name='Middle Name')),
                ('lname', models.CharField(max_length=255, verbose_name='Last Name')),
                ('relationship_to_student', models.CharField(blank=True, max_length=500)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('post_code', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('primary_contact', models.BooleanField(default=True, help_text='This contact is where mailings should be sent to. In the event of an emergency, this is the person that will be contacted first.')),
                ('emergency_only', models.BooleanField(default=False, help_text='Only contact in case of emergency')),
                ('sync_schoolreach', models.BooleanField(default=True, help_text='Sync this contact with schoolreach')),
            ],
            options={
                'verbose_name': 'Student Contact',
                'ordering': ('primary_contact', 'lname'),
            },
        ),
        migrations.CreateModel(
            name='GradeLevel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Grade Number')),
                ('name', models.CharField(max_length=150, unique=True, verbose_name='Grade Name')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MessageToStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(help_text='This message will be shown to students when they log in.')),
                ('start_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
                ('end_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
            ],
        ),
        migrations.CreateModel(
            name='SchoolYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('start_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
                ('end_date', models.DateField(validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
                ('grad_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
                ('active_year', models.BooleanField(default=False, help_text='DANGER!! This is the current school year. There can only be one and setting this will remove it from other years. If you want to change the active year you almost certainly want to click Management, Change School Year.')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(blank=True, max_length=150, null=True, verbose_name='First Name')),
                ('mname', models.CharField(blank=True, max_length=150, null=True, verbose_name='Middle Name')),
                ('lname', models.CharField(blank=True, max_length=150, null=True, verbose_name='Last Name')),
                ('grad_date', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))])),
                ('pic', models.ImageField(blank=True, null=True, upload_to='student_pics')),
                ('alert', models.CharField(blank=True, help_text='Warn any user who accesses this record with this text', max_length=500)),
                ('sex', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female')], max_length=1, null=True)),
                ('bday', models.DateField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(datetime.date(1970, 1, 1))], verbose_name='Birth Date')),
                ('prems_number', models.CharField(blank=True, help_text='For integration with outside databases', max_length=15, null=True, unique=True)),
                ('parent_guardian', models.CharField(blank=True, editable=False, max_length=150)),
                ('street', models.CharField(blank=True, editable=False, max_length=150)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255)),
                ('post_code', models.IntegerField(blank=True, editable=False)),
                ('parent_email', models.EmailField(blank=True, editable=False, max_length=254)),
                ('notes', models.TextField(blank=True)),
                ('class_of_year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sis.classyear', verbose_name='Graduating Class')),
                ('emergency_contacts', models.ManyToManyField(blank=True, to='sis.EmergencyContact', verbose_name='Student Contact')),
                ('siblings', models.ManyToManyField(blank=True, to='sis.Student')),
                ('year', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sis.gradelevel', verbose_name='Grade level')),
            ],
            options={
                'ordering': ('fname', 'lname'),
                'permissions': (('viewStudent', 'View student'), ('reports', 'View reports')),
            },
        ),
        migrations.CreateModel(
            name='StudentHealthRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('record', models.TextField()),
                ('student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='sis.student')),
            ],
        ),
        migrations.CreateModel(
            name='EmergencyContactNumber',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=15, null=True)),
                ('ext', models.CharField(blank=True, max_length=10, null=True)),
                ('_type', models.CharField(blank=True, choices=[('H', 'Home'), ('C', 'Cell'), ('W', 'Work'), ('O', 'Other')], max_length=2)),
                ('note', models.CharField(blank=True, max_length=255)),
                ('primary', models.BooleanField(default=False)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis.emergencycontact')),
            ],
            options={
                'verbose_name': 'Student Contact Number',
            },
        ),
        migrations.CreateModel(
            name='GradeScaleRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('letter_grade', models.CharField(blank=True, max_length=50)),
                ('numeric_scale', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('grade_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sis.gradescale')),
            ],
            options={
                'unique_together': {('min_grade', 'max_grade', 'grade_scale')},
            },
        ),
    ]
