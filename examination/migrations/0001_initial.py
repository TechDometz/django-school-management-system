# Generated by Django 5.1 on 2025-01-16 14:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic', '0001_initial'),
        ('administration', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GradeScale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExaminationListHandler',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateField()),
                ('ends_date', models.DateField()),
                ('out_of', models.IntegerField()),
                ('comments', models.CharField(blank=True, help_text='Comments Regarding Exam', max_length=200, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('classrooms', models.ManyToManyField(related_name='class_exams', to='academic.classroom')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='academic.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='MarksManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.FloatField()),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='marks_entered', to='academic.teacher')),
                ('exam_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_marks', to='examination.examinationlisthandler')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_marks', to='academic.studentclass')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subject_marks', to='academic.subject')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gpa', models.FloatField(null=True)),
                ('cat_gpa', models.FloatField(null=True)),
                ('academic_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='administration.academicyear')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic.student')),
                ('term', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='administration.term')),
            ],
        ),
        migrations.CreateModel(
            name='GradeScaleRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('max_grade', models.DecimalField(decimal_places=2, max_digits=5)),
                ('letter_grade', models.CharField(blank=True, max_length=50, null=True)),
                ('numeric_scale', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('grade_scale', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='examination.gradescale')),
            ],
            options={
                'indexes': [models.Index(fields=['min_grade', 'max_grade', 'grade_scale'], name='examination_min_gra_eab956_idx')],
                'unique_together': {('min_grade', 'max_grade', 'grade_scale')},
            },
        ),
    ]
